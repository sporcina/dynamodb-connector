/**
 * This file was automatically generated by the Mule Development Kit
 */
package org.mule.modules;

import com.amazonaws.services.dynamodbv2.model.TableStatus;

import org.mule.api.MuleEvent;
import org.mule.construct.Flow;
import org.mule.modules.samples.FakeCustomer;
import org.mule.tck.junit4.FunctionalTestCase;
import org.mule.tck.junit4.AbstractMuleTestCase;

import org.junit.Test;
import org.junit.Assert;
import org.junit.BeforeClass;

import java.util.Properties;

public class DynamoDBConnectorTest extends FunctionalTestCase
{
    @BeforeClass
    public static void beforeClass() {
        increaseMaxTimeoutForTests();
    }

    @Override
    protected String getConfigResources()
    {
        return "mule-config.xml";
    }

    @Test
    public void shouldCreateTable() throws Exception
    {
        runFlowAndExpect("Should_Create_Table", TableStatus.ACTIVE.toString());
    }

    @Test
    public void shouldSaveDocument() throws Exception
    {
        FakeCustomer fakeCustomer = new FakeCustomer();
        /*
        The 'num' does not need to be set for the save request to work.  @DynamoDBAutoGeneratedKey in the FakeCustomer
        class ensures that the field is populated automatically.
        */
        fakeCustomer.setName("John Doe");
        fakeCustomer.setPhone("(123)456-789");
        fakeCustomer.setNotes("some notes");

        FakeCustomer expected = FakeCustomer.copy(fakeCustomer);
        FakeCustomer payload = FakeCustomer.copy(fakeCustomer);

        runFlowWithPayloadAndExpect("Should_Save_Document", expected, payload);
    }


    /**
    * Run the flow specified by name and assert equality on the expected output
    *
    * @param flowName
     *              The name of the flow to run
    * @param expect
     *              The expected output
    */
    protected <T> void runFlowAndExpect(String flowName, T expect) throws Exception
    {
        Flow flow = lookupFlowConstruct(flowName);
        MuleEvent event = FunctionalTestCase.getTestEvent(null);
        MuleEvent responseEvent = flow.process(event);

        Assert.assertEquals(expect, responseEvent.getMessage().getPayload());
    }


    /**
     * Run the flow specified by name using the specified payload and assert
     * equality on the expected output
     *
     * @param flowName
     *              The name of the flow to run
     * @param expected
     *              The expected output
     * @param payload
     *              The payload of the input event
     */
    protected <T, U> void runFlowWithPayloadAndExpect(String flowName, FakeCustomer expected, FakeCustomer payload) throws Exception
    {
        Flow flow = lookupFlowConstruct(flowName);
        MuleEvent event = FunctionalTestCase.getTestEvent(payload);
        MuleEvent responseEvent = flow.process(event);

        expected.equals_IgnoreNumValue(responseEvent.getMessage().getPayload());
    }


    /**
     * Retrieve a flow by name from the registry
     *
     * @param name
     *          Name of the flow to retrieve
     */
    protected Flow lookupFlowConstruct(String name)
    {
        return (Flow) FunctionalTestCase.muleContext.getRegistry().lookupFlowConstruct(name);
    }

    /**
     * Increase the maximum timeout for a test to fail
     *
     * The creation of a table in dynamoDB can be time-consuming depending on the complexity of the table and the
     * read/write capacity requested.  The default timeout for the average test is 60 seconds, defined as
     * AbstractMuleTestCase.DEFAULT_TEST_TIMEOUT_SECS.  For this test, table creation typically takes less than a
     * minute, but we increase the timeout to 5 minutes which will allow ample time to for the create table
     * request to complete.
     *
     * note:  This method affects all tests in this test class.  Ultimately we would like to alter the timeout for
     * those tests that requires it.  We have not found a good way to do that at this time.
     */
    private static void increaseMaxTimeoutForTests() {
        Properties props = System.getProperties();
        props.setProperty(AbstractMuleTestCase.TEST_TIMEOUT_SYSTEM_PROPERTY, "300"); // 300 seconds = 5 minutes
        System.setProperties(props);
    }
}
